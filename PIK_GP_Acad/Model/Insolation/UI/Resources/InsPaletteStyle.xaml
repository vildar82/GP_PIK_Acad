<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:catel="http://catel.codeplex.com"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:PIK_GP_Acad.Insolation.UI"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="ReadOnlyBackgroundBrush" Color="LightGray" />
    <SolidColorBrush x:Key="DarkThemeBackgroundBrush" Color="#5C5C5C" />
    <BitmapImage x:Key="biSun" UriSource="/PIK_GP_Acad;component/Resources/Sun.png" />
    <BitmapImage x:Key="biOn" UriSource="/PIK_GP_Acad;component/Resources/On.png" />
    <BitmapImage x:Key="biOff" UriSource="/PIK_GP_Acad;component/Resources/Off.png" />
    <BitmapImage x:Key="biTree" UriSource="/PIK_GP_Acad;component/Resources/GP_Ins_Trees.png" />
    <BitmapImage x:Key="biIlums" UriSource="/PIK_GP_Acad;component/Resources/GP_Ins_Illums.png" />
    <BitmapImage x:Key="biOptions" UriSource="/PIK_GP_Acad;component/Resources/options.png" />
    <BitmapImage x:Key="biClose" UriSource="/PIK_GP_Acad;component/Resources/Close.png" />
    <BitmapImage x:Key="biAdd" UriSource="/PIK_GP_Acad;component/Resources/Add.png" />
    <BitmapImage x:Key="biOption_dots" UriSource="/PIK_GP_Acad;component/Resources/option_dots.png" />
    <BitmapImage x:Key="biDraw_visuals" UriSource="/PIK_GP_Acad;component/Resources/draw_visuals.png" />    
    <BitmapImage x:Key="biUpdate" UriSource="/PIK_GP_Acad;component/Resources/update.png"/>
    <BitmapImage x:Key="biFront" UriSource="/PIK_GP_Acad;component/Resources/GP_Ins_Front.png"/>
    <sys:Double x:Key="SmallButtonsHeight">20</sys:Double>    
    <sys:Double x:Key="NormalButtonsHeight">23</sys:Double>    
    <Image x:Key="imOn" Source="{StaticResource biOn}"/>
    <Image x:Key="imOff" Source="{StaticResource biOff}"/>
    <Image x:Key="imSun" Source="{StaticResource biSun}"/>
    <Image x:Key="imTree" Source="{StaticResource biTree}"/>
    <Image x:Key="imIlums" Source="{StaticResource biIlums}"/>
    <Image x:Key="imOptions" Source="{StaticResource biOptions}"/>
    <Image x:Key="imDelete" Source="{StaticResource biClose}"/>
    <Image x:Key="imAdd" Source="{StaticResource biAdd}"/>
    <Image x:Key="imOption_dots" Source="{StaticResource biOption_dots}"/>
    <Image x:Key="imDraw_visuals" Source="{StaticResource biDraw_visuals}"/>
    <Image x:Key="imUpdate" Source="{StaticResource biUpdate}"/>
    <Image x:Key="imFront" Source="{StaticResource biFront}"/>
    <!--<Style x:Key="ControlBase" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style TargetType="ComboBox" BasedOn="{StaticResource ControlBase}">
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource ControlBase}">
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource ControlBase}">
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBox" x:Key="ReadOnly" BasedOn="{StaticResource ControlBase}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="{StaticResource ReadOnlyBackgroundBrush}"/>
    </Style>
    <Style TargetType="ListBox" BasedOn="{StaticResource ControlBase}"></Style>
    <Style TargetType="TabControl" BasedOn="{StaticResource ControlBase}"></Style>
    <Style TargetType="Button" BasedOn="{StaticResource ControlBase}"></Style>-->
    <!--<Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource DarkThemeBackgroundBrush}" />
    </Style>-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="btnSmall" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="{StaticResource SmallButtonsHeight}"/>
        <Setter Property="Width" Value="{StaticResource SmallButtonsHeight}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="btnNormal" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="{StaticResource NormalButtonsHeight}"/>
        <Setter Property="Width" Value="{StaticResource NormalButtonsHeight}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="tbtnSmall" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="{StaticResource SmallButtonsHeight}"/>
        <Setter Property="Width" Value="{StaticResource SmallButtonsHeight}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="tbtnNormal" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="{StaticResource NormalButtonsHeight}"/>
        <Setter Property="Width" Value="{StaticResource NormalButtonsHeight}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style TargetType="{x:Type UserControl}">
        <Setter Property="Background" Value="{DynamicResource DarkThemeBackgroundBrush}" />
    </Style>
    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource DarkThemeBackgroundBrush}" />
    </Style>    
    <Style x:Key="ToggleButtonOnOff" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Themes:ButtonChrome
                        x:Name="Chrome"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                        RenderPressed="{TemplateBinding IsPressed}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Content" Value="On">
                                <!--<Setter.Value>
                                    <Image Source="{StaticResource On}" />
                                </Setter.Value>-->
                            </Setter>
                            <Setter Property="Background" Value="Green" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Content" Value="Off">
                                <!--<Setter.Value>
                                    <Image Source="{StaticResource Off}" />
                                </Setter.Value>-->
                            </Setter>
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>